.data
format_int16: .string "16-bit integer: %d\n"
format_int32: .string "32-bit integer: %d\n"
format_int64: .string "64-bit integer: %lld\n"
format_float32: .string "32-bit float: %f\n"
format_float64: .string "64-bit float: %f\n"


.text
myFlotik:  .float 3.14
myDoublik: .float 3.14159265359
.globl main
main:
    movq %rsp, %rbp #for correct debugging 
    
   
    sub     $110, %rsp
    
    movw    $6535, (%rsp)
    movl    $23, 34(%rsp)
    movq    $23234234, 70(%rsp)
   
   
    
    lea     format_int16(%rip), %rcx
    xor     %rdx,%rdx
    mov     (%rsp), %rdx
    call    printf
   
    
   
    
    lea     format_int32(%rip), %rcx
    xor     %rdx,%rdx
    mov    34(%rsp), %rdx
    call    printf
    
    
    lea     format_int64(%rip), %rcx 
    xor     %rdx,%rdx
    mov     70(%rsp), %rdx
    call    printf
    
    
    add     $110, %rsp
    sub     $110, %rsp
    
    
    movss   myFlotik(%rip), %xmm0
    movss   %xmm0, (%rsp)
    movss   myDoublik(%rip), %xmm1
    movss   %xmm1, 40(%rsp)
    
    
    lea     format_float32(%rip), %rcx 
    xor     %rdx,%rdx
    movss   (%rsp), %xmm1
    movss   (%rsp), %rdx
    
    call    printf
   
    
    lea     format_float64(%rip), %rcx 
    xor     %rdx,%rdx
    cvtss2sd    40(%rsp), %xmm1
    mov     40(%rsp), %rdx
    call    printf
    
    
    add     $110, %rsp
    xor     %eax, %eax
    ret
    
    
